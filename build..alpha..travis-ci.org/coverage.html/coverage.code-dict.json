{"/home/travis/build/npmtest/node-npmtest-node-webcl/test.js":"/* istanbul instrument in package npmtest_node_webcl */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-webcl/lib.npmtest_node_webcl.js":"/* istanbul instrument in package npmtest_node_webcl */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_node_webcl = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_node_webcl = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-node-webcl/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-node-webcl && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_node_webcl */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_node_webcl\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_node_webcl.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_node_webcl.rollup.js'] =\n            local.assetsDict['/assets.npmtest_node_webcl.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_node_webcl.__dirname + '/lib.npmtest_node_webcl.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-node-webcl/node_modules/node-webcl/webcl.js":"// Copyright (c) 2011-2012, Motorola Mobility, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright\n//    notice, this list of conditions and the following disclaimer.\n//  * Redistributions in binary form must reproduce the above copyright\n//    notice, this list of conditions and the following disclaimer in the\n//    documentation and/or other materials provided with the distribution.\n//  * Neither the name of the Motorola Mobility, Inc. nor the names of its\n//    contributors may be used to endorse or promote products derived from this\n//    software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\"use strict\";\n\nvar cl = require('./build/Release/webcl.node');\n\nmodule.exports=cl;\nglobal.webcl=cl;\nglobal.WebCLPlatform=cl.WebCLPlatform;\nglobal.WebCLDevice=cl.WebCLDevice;\nglobal.WebCLContext=cl.WebCLContext;\nglobal.WebCLCommandQueue=cl.WebCLCommandQueue;\nglobal.WebCLEvent=cl.WebCLEvent;\nglobal.WebCLBuffer=cl.WebCLBuffer;\nglobal.WebCLImage=cl.WebCLImage;\nglobal.WebCLSampler=cl.WebCLSampler;\nglobal.WebCLUserEvent=cl.WebCLUserEvent;\nglobal.WebCLException=cl.WebCLException;\nglobal.WebCLProgram=cl.WebCLProgram;\nglobal.WebCLKernel=cl.WebCLKernel;\nglobal.WebCLImageDescriptor=cl.WebCLImageDescriptor;\n\n// cl.size = {};\n// cl.size.CHAR = cl.size_CHAR;\n// cl.size.SHORT = cl.size_SHORT;\n// cl.size.INT = cl.size_INT;\n// cl.size.LONG = cl.size_LONG;\n// cl.size.FLOAT = cl.size_FLOAT;\n// cl.size.DOUBLE = cl.size_DOUBLE;\n// cl.size.HALF = cl.size_HALF;\n\n// cl.type = {};\n// cl.type.CHAR      = 0;\n// cl.type.UCHAR     = 1;\n// cl.type.SHORT     = 2;\n// cl.type.USHORT    = 3;\n// cl.type.INT       = 4;\n// cl.type.UINT      = 5;\n// cl.type.LONG      = 6;\n// cl.type.ULONG     = 7;\n// cl.type.FLOAT     = 8;\n// cl.type.HALF      = 9;\n// cl.type.DOUBLE    = 10;\n// cl.type.QUAD      = 11;\n// cl.type.LONG_LONG = 12;\n\n// cl.type.VEC2      = 1 << 16;\n// cl.type.VEC3      = 1 << 17;\n// cl.type.VEC4      = 1 << 18;\n// cl.type.VEC8      = 1 << 19;\n// cl.type.VEC16     = 1 << 20;\n\n// cl.type.LOCAL_MEMORY_SIZE = 0xFF;\n\n// make sure all OpenCL resources are released at node exit\nprocess.on('exit',function() {\n  cl.releaseAll(1);\n});\n\n// process.on('SIGINT', function () {\n//   cl.releaseAll(-1);\n// });\n\n//////////////////////////////\n// WebCL object\n//////////////////////////////\nfunction checkObjectType(obj, type) {\n  //console.log('checking object: '+obj+' type: '+Object.prototype.toString.call(obj)+' for type '+type);\n  return Object.prototype.toString.call(obj) === '[object '+type+']';\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\nvar _getPlatforms = cl.getPlatforms;\ncl.getPlatforms = function () {\n  if (!(arguments.length === 0)) {\n    throw new TypeError('Expected getPlatforms()');\n  }\n  return _getPlatforms();\n}\n\ncl.getSupportedExtensions = function () {\n  return cl.getPlatforms()[0].getSupportedExtensions();\n}\n\ncl.enableExtension = function (name) {\n  return cl.getPlatforms()[0].enableExtension(name);\n}\n\nvar _createContext = cl.createContext;\ncl.createContext = function (arg1, arg2, arg3) {\n  if (!(typeof arg1 === 'number' || checkObjectType(arg1, 'WebCLPlatform') || checkObjectType(arg1, 'WebCLDevice') ||\n          typeof arg1 === 'object' || arguments.length==0 ||\n          typeof arg3 === 'number')\n    ) {\n    throw new TypeError('Expected createContext(optional CLenum deviceType = WebCL.DEVICE_TYPE_DEFAULT)\\n'\n      +'or createContext(WebCLPlatform platform, optional CLenum deviceType = WebCL.DEVICE_TYPE_DEFAULT)\\n'\n      +'or createContext(WebCLDevice device)\\n'\n      +'or createContext(WebCLDevice[] devices)\\n'\n      +'or createContext(WebGLRenderingContext gl, optional CLenum deviceType = WebCL.DEVICE_TYPE_DEFAULT);\\n'\n      +'or createContext(WebGLRenderingContext gl, WebCLPlatform platform, optional CLenum deviceType = WebCL.DEVICE_TYPE_DEFAULT);\\n'\n      +'or createContext(WebGLRenderingContext gl, WebCLDevice device);\\n'\n      +'or createContext(WebGLRenderingContext gl, sequence<WebCLDevice> devices);');\n  }\n\n  var ctx = _createContext(arg1, arg2, arg3);\n\n  return ctx;\n}\n\nvar _waitForEvents = cl.waitForEvents;\ncl.waitForEvents = function (events, callback) {\n  if (!(arguments.length >= 1 && typeof events === 'object'  &&\n    (typeof callback === 'undefined' || typeof callback === 'function'))) {\n    throw new TypeError('Expected waitForEvents(WebCLEvent[] events, optional callback)');\n  }\n  return _waitForEvents(events, callback);\n}\n\nvar _releaseAll = cl.releaseAll;\ncl.releaseAll = function (atExit) {\n  return _releaseAll(atExit);\n}\n\n//////////////////////////////\n//WebCLCommandQueue object\n//////////////////////////////\ncl.WebCLCommandQueue.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLCommandQueue.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLCommandQueue.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueNDRangeKernel=function (kernel, workDim, offsets, globals, locals, event_list, event) {\n  if (!(arguments.length>= 4 && checkObjectType(kernel, 'WebCLKernel') && (typeof workDim === 'number') &&\n      typeof offsets === 'object' && typeof globals === 'object' &&\n      (locals==null || typeof locals === 'undefined' || typeof locals === 'object') &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n      )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueNDRangeKernel(WebCLKernel kernel, int workDim, int[3] offsets, int[3] globals, int[3] locals, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueNDRangeKernel(kernel, workDim, offsets, globals, locals, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueTask=function (kernel, event_list, event) {\n  if (!(arguments.length >= 1 && checkObjectType(kernel, 'WebCLKernel') &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n    )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueTask(WebCLKernel kernel, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueTask(kernel, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueWriteBuffer=function (buffer, blocking_write, offset, sizeInBytes, ptr, event_list, event) {\n    if (!(arguments.length >= 5 &&\n      checkObjectType(buffer, 'WebCLBuffer') &&\n      (typeof blocking_write === 'boolean' || typeof blocking_write === 'number') &&\n      typeof offset === 'number' && typeof sizeInBytes === 'number' &&\n      typeof ptr === 'object' &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n      )) {\n        throw new TypeError('Expected WebCLCommandQueue.enqueueWriteBuffer(WebCLBuffer buffer, boolean blocking_write, ' +\n            'uint offset, uint sizeInBytes, ArrayBuffer ptr, WebCLEvent[] event_list, WebCLEvent event)');\n    }\n    return this._enqueueWriteBuffer(buffer, blocking_write, offset, sizeInBytes, ptr, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueReadBuffer=function (buffer, blocking_read, offset, cb, ptr, event_list, event) {\n  //console.log('checking object: type: '+Object.prototype.toString.call(ptr)+' for typeof: '+typeof(ptr));\n  if (!(arguments.length >= 5 &&\n    checkObjectType(buffer, 'WebCLBuffer') &&\n    (typeof blocking_read === 'boolean' || typeof blocking_read === 'number') &&\n    typeof offset === 'number' && typeof cb === 'number' &&\n    typeof ptr === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event == null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n    )) {\n      throw new TypeError('Expected WebCLCommandQueue.enqueueReadBuffer(WebCLBuffer buffer, boolean blocking_read, ' +\n          'uint offset, uint cb, ArrayBuffer ptr, WebCLEvent[] event_list, WebCLEvent event)');\n    }\n    return this._enqueueReadBuffer(buffer, blocking_read, offset, cb, ptr, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueCopyBuffer=function (src_buffer, dst_buffer,\n                                                           src_offset, dst_offset, size,\n                                                           event_list, event) {\n  if (!(arguments.length >= 5 &&\n      checkObjectType(src_buffer, 'WebCLBuffer') &&\n      checkObjectType(dst_buffer, 'WebCLBuffer') &&\n      typeof src_offset === 'number' && typeof dst_offset === 'number' && typeof size === 'number' &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueCopyBuffer(WebCLBuffer src_buffer, WebCLBuffer dst_buffer, ' +\n        'int src_offset, int dst_offset, int size, ' +\n        'WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueCopyBuffer(src_buffer, dst_buffer,\n                                 src_offset, dst_offset, size,\n                                 event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueWriteBufferRect=function (buffer, blocking_write,\n                                                                buffer_origin, host_origin, region,\n                                                                buffer_row_pitch, buffer_slice_pitch,\n                                                                host_row_pitch, host_slice_pitch,\n                                                                ptr,\n                                                                event_list, event) {\n    if (!(arguments.length >= 9 &&\n      checkObjectType(buffer, 'WebCLBuffer') &&\n      (typeof blocking_write === 'boolean' || typeof blocking_write === 'number') &&\n      typeof buffer_origin === 'object' && typeof host_origin === 'object' && typeof region === 'object' &&\n      typeof host_row_pitch === 'number' && typeof host_slice_pitch === 'number' &&\n      typeof ptr === 'object' &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n      )) {\n        throw new TypeError('Expected WebCLCommandQueue.enqueueWriteBufferRect(WebCLBuffer memory_object, ' +\n            'boolean blocking_write, uint[3] buffer_origin, uint[3] host_origin, uint[3] region, ' +\n            'uint buffer_row_pitch, uint buffer_slice_pitch, uint host_row_pitch, uint host_slice_pitch, ' +\n            'ArrayBuffer ptr,' +\n            'WebCLEvent[] event_list, WebCLEvent event)');\n    }\n    return this._enqueueWriteBufferRect(buffer, blocking_write,\n        buffer_origin, host_origin, region,\n        buffer_row_pitch, buffer_slice_pitch,\n        host_row_pitch, host_slice_pitch,\n        ptr,\n        event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueReadBufferRect=function (buffer, blocking_read,\n                                                               buffer_origin, host_origin, region,\n                                                               buffer_row_pitch, buffer_slice_pitch,\n                                                               host_row_pitch, host_slice_pitch,\n                                                               ptr,\n                                                               event_list, event) {\n    if (!(arguments.length >= 9 &&\n      checkObjectType(buffer, 'WebCLBuffer') &&\n      (typeof blocking_read === 'boolean' || typeof blocking_read === 'number') &&\n      typeof buffer_origin === 'object' && typeof host_origin === 'object' && typeof region === 'object' &&\n      typeof host_row_pitch === 'number' && typeof host_slice_pitch === 'number' &&\n      typeof ptr === 'object' &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n      )) {\n        throw new TypeError('Expected WebCLCommandQueue.enqueueReadBufferRect(WebCLBuffer buffer, ' +\n            'boolean blocking_write, uint[3] buffer_origin, uint[3] host_origin, uint[3] region, ' +\n            'uint buffer_row_pitch, uint buffer_slice_pitch, uint host_row_pitch, uint host_slice_pitch, ' +\n            'ArrayBuffer ptr,' +\n            'WebCLEvent[] event_list, WebCLEvent event)');\n    }\n    return this._enqueueReadBufferRect(buffer, blocking_read,\n        buffer_origin, host_origin, region,\n        buffer_row_pitch, buffer_slice_pitch,\n        host_row_pitch, host_slice_pitch,\n        ptr,\n        event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueCopyBufferRect=function (src_buffer, dst_buffer,\n                                                               src_origin, dst_origin, region,\n                                                               src_row_pitch, src_slice_pitch,\n                                                               dst_row_pitch, dst_slice_pitch,\n                                                               event_list, event) {\n  if (!(arguments.length >= 9 &&\n    checkObjectType(src_buffer, 'WebCLBuffer') && checkObjectType(dst_buffer, 'WebCLBuffer') &&\n    typeof src_origin === 'object' && typeof dst_origin === 'object' && typeof region === 'object' &&\n    typeof src_row_pitch === 'number' && typeof src_slice_pitch === 'number' &&\n    typeof dst_row_pitch === 'number' && typeof dst_slice_pitch === 'number' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueCopyBufferRect(WebCLBuffer src_buffer, WebCLBuffer dst_buffer, ' +\n        'uint[3] src_origin, uint[3] dst_origin, uint[3] region, ' +\n        'uint src_row_pitch, uint src_slice_pitch, ' +\n        'uint dst_row_pitch, uint dst_slice_pitch, ' +\n        'WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueCopyBufferRect(src_buffer, dst_buffer,\n      src_origin, dst_origin, region,\n      src_row_pitch, src_slice_pitch,\n      dst_row_pitch, dst_slice_pitch,\n      event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueWriteImage=function (image, blocking_write, origin, region, row_pitch, ptr, event_list, event) {\n  //console.log('checking object: type: '+Object.prototype.toString.call(ptr)+' for typeof: '+typeof(ptr));\n  if (!(arguments.length >= 6 &&\n    checkObjectType(image, 'WebCLImage') &&\n    typeof origin === 'object' &&\n    typeof region === 'object' &&\n    typeof row_pitch === 'number' &&\n    typeof ptr === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueWriteImage(WebCLImage image, boolean blocking_write, ' +\n      'int[3] origin, int[3] region, int row_pitch, ArrayBuffer ptr, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueWriteImage(image, blocking_write, origin, region, row_pitch, ptr, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueReadImage=function (image, blocking_read, origin, region, row_pitch,\n                                                          ptr, event_list, event) {\n  if (!(arguments.length >= 6 &&\n    checkObjectType(image, 'WebCLImage') &&\n    typeof origin === 'object' &&\n    typeof region === 'object' &&\n    typeof row_pitch === 'number' &&\n    typeof ptr === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueReadImage(WebCLImage image, boolean blocking_write, ' +\n        'uint[3] region, uint row_pitch, ' +\n        'ArrayBuffer ptr, optional WebCLEvent[] event_list, optional WebCLEvent event)');\n  }\n  return this._enqueueReadImage(image, blocking_read, origin, region, row_pitch, ptr, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueCopyImage=function (src_image, dst_image, src_origin, dst_origin, region,\n                                                          event_list, event) {\n  if (!(arguments.length >= 5 &&\n    checkObjectType(src_image, 'WebCLImage') &&\n    checkObjectType(dst_image, 'WebCLImage') &&\n    typeof src_origin === 'object' &&\n    typeof dst_origin === 'object' &&\n    typeof region === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event == null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueCopyImage(WebCLImage src_image, WebCLImage dst_image, ' +\n        'uint[3] src_origin, uint[3] dst_origin, uint[3] region, ' +\n        'WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueCopyImage(src_image, dst_image, src_origin, dst_origin, region, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueCopyImageToBuffer=function (src_image, dst_buffer, src_origin, region, dst_offset,\n                                                                  event_list, event) {\n  if (!(arguments.length >= 5 &&\n    checkObjectType(src_image, 'WebCLImage') &&\n    checkObjectType(dst_buffer, 'WebCLBuffer') &&\n    typeof src_origin === 'object' &&\n    typeof region === 'object' &&\n    typeof dst_offset === 'number' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueCopyImageToBuffer(WebCLImage src_image, WebCLBuffer dst_buffer, ' +\n        'uint[3] src_origin, uint[3] region, uint dst_offset, ' +\n        'WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueCopyImageToBuffer(src_image, dst_buffer, src_origin, region, dst_offset, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueCopyBufferToImage=function (src_buffer, dst_image, src_offset, dst_origin,\n                                                                  region, event_list, event) {\n  if (!(arguments.length >= 5 &&\n    checkObjectType(src_buffer, 'WebCLBuffer') &&\n    checkObjectType(dst_image, 'WebCLImage') &&\n    typeof src_offset === 'number' &&\n    typeof dst_origin === 'object' &&\n    typeof region === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueCopyBufferToImage(WebCLBuffer src_buffer, WebCLImage dst_image, ' +\n        'uint src_offset, uint[3] dst_origin, uint[4] region, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueCopyBufferToImage(src_buffer, dst_image, src_offset, dst_origin, region, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueMapBuffer=function (memory_object, blocking, flags, offset, size, event_list, event) {\n  if (!(arguments.length >= 5 &&\n    checkObjectType(memory_object, 'WebCLBuffer') &&\n    (typeof blocking === 'boolean' || typeof blocking === 'number') &&\n    typeof flags === 'number' &&\n    typeof offset === 'number' &&\n    typeof size === 'number' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueMapBuffer(WebCLBuffer memory_object, boolean blocking, CLenum flags, uint offset, uint size, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n\n  return this._enqueueMapBuffer(memory_object, blocking, flags, offset, size, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueMapImage=function (memory_object, blocking, flags, origin, region, event_list, event) {\n  if (!(arguments.length >= 5 &&\n    checkObjectType(memory_object, 'WebCLImage') &&\n    (typeof blocking === 'boolean' || typeof blocking === 'number') &&\n    typeof flags === 'number' &&\n    typeof origin === 'number' &&\n    typeof region === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueMapImage(WebCLImage memory_object, boolean blocking, CLenum flags, uint origin, WebCLRegion region, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueMapImage(memory_object, blocking, flags, origin, region, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueUnmapMemObject=function (memory_object, region, event_list, event) {\n  if (!(arguments.length >= 2 &&\n    (checkObjectType(memory_object, 'WebCLBuffer') || checkObjectType(memory_object, 'WebCLImage')) &&\n    typeof region === 'object' &&\n    (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n    (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueUnmapMemObject(WebCLMemoryObject memory_object, ArrayBuffer region, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueUnmapMemObject(memory_object, region, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueMarker=function (event) {\n  if (!(arguments.length == 1 && checkObjectType(event, 'WebCLEvent'))) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueMarker(WebCLEvent event)');\n  }\n  return this._enqueueMarker(event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueWaitForEvents=function (event_wait_list) {\n  if (!(arguments.length >=0 &&\n      (typeof event_list === 'undefined' || event_list==null || typeof event_list === 'object') )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueWaitForEvents(WebCLEvent[] event_wait_list)');\n  }\n  return this._enqueueWaitForEvents(event_wait_list);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueBarrier=function (event_list, event) {\n  if (!(arguments.length >= 0 &&\n      (event_list==null || typeof event_list === 'undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n      )) {\n    throw new TypeError('Expected WebCLCommandQueue.enqueueBarrier(WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueBarrier(event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.flush=function () {\n  if (!(arguments.length === 0)) {\n    throw new TypeError('Expected WebCLCommandQueue.flush()');\n  }\n  return this._flush();\n}\n\ncl.WebCLCommandQueue.prototype.finish=function (callback) {\n  if (!(arguments.length == 0 ||\n    (arguments.length==1 && typeof callback === 'function'))) {\n    throw new TypeError('Expected WebCLCommandQueue.finish(optional callback)');\n  }\n  return this._finish(callback);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueAcquireGLObjects=function (mem_objects, event_list, event) {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n  }\n  if (!(arguments.length >= 1 &&\n      typeof mem_objects === 'object' &&\n      (event_list==null || typeof event_list==='undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLEvent WebCLGL.enqueueAcquireGLObjects(WebCLMemoryObject[] mem_objects, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueAcquireGLObjects(mem_objects, event_list, event);\n}\n\ncl.WebCLCommandQueue.prototype.enqueueReleaseGLObjects=function (mem_objects, event_list, event) {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n  }\n  if (!(arguments.length >= 1 &&\n      typeof mem_objects === 'object' &&\n      (event_list==null || typeof event_list==='undefined' || typeof event_list === 'object') &&\n      (event==null || typeof event === 'undefined' || checkObjectType(event, 'WebCLEvent'))\n  )) {\n    throw new TypeError('Expected WebCLEvent WebCLGL.enqueueReleaseGLObjects(WebCLMemoryObject[] mem_objects, WebCLEvent[] event_list, WebCLEvent event)');\n  }\n  return this._enqueueReleaseGLObjects(mem_objects, event_list, event);\n}\n\n//////////////////////////////\n//WebCLDevice object\n//////////////////////////////\ncl.WebCLDevice.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLDevice.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLDevice.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLDevice.prototype.extensions=[];\ncl.WebCLDevice.prototype.enable_extensions={\n  KHR_gl_sharing: {\n    enabled: false,\n    cl_name: null,\n  },\n  KHR_fp16: {\n    enabled: false,\n    cl_name: null,\n  },\n  KHR_fp64: {\n    enabled: false,\n    cl_name: null,\n  },\n  system_info: {\n    enabled: false,\n  },\n  validation_info: {\n    enabled: false,\n  },\n};\n\ncl.WebCLDevice.prototype.getSupportedExtensions=function () {\n  this.extensions=[];\n  var exts = this._getSupportedExtensions().trim().split(\" \");\n  // log('OpenCL extensions: '+exts);\n\n  for(var i=0;i<exts.length;i++) {\n    var ext=exts[i].toLowerCase();\n    if(ext.lastIndexOf('_gl_sharing') > -1)\n      this.extensions.push('KHR_gl_sharing');\n    else if(ext.lastIndexOf('_fp64') > -1)\n      this.extensions.push('KHR_fp64');\n    else if(ext.lastIndexOf('_fp16') > -1)\n      this.extensions.push('KHR_fp16');\n    else if(this.enable_extensions.system_info.enabled) {\n      this.extensions.push(ext);\n    }\n  }\n\n  return this.extensions.sort();\n}\n\ncl.WebCLDevice.prototype.enableExtension=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'string')) {\n    throw new TypeError('Expected WebCLDevice.enableExtension(String extension_name)');\n  }\n  var ret = this._enableExtension(param_name);\n  if(ret)\n    cl.WebCLDevice.prototype.enable_extensions[param_name].enabled = true;\n  return ret;\n}\n\n//////////////////////////////\n//WebCLContext object\n//////////////////////////////\ncl.WebCLContext.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLContext.prototype.retain=function () {\n  return this._retain();\n}\n\ncl.WebCLContext.prototype.releaseAll=function () {\n  return this._releaseAll();\n}\n\ncl.WebCLContext.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLContext.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLContext.prototype.createProgram=function (sources) {\n  if (!(arguments.length === 1 && (sources==null || typeof sources === 'string'))) {\n    throw new TypeError('Expected WebCLContext.createProgram(string sources)');\n  }\n  return this._createProgram(sources);\n}\n\n// TODO\ncl.WebCLContext.prototype.createProgramWithBinaries=function (devices, binaries) {\n  if (!(arguments.length === 2 && typeof devices === 'object' && typeof binaries === 'object')) {\n    throw new TypeError('Expected WebCLContext.createProgramWithBinaries(WebCLDevice[] devices, Object[] binaries)');\n  }\n  return this._createProgramWithBinaries(devices, binaries);\n}\n\ncl.WebCLContext.prototype.createCommandQueue=function (device, properties) {\n  if (!(arguments.length==0 ||\n      ((arguments.length ==1 && (checkObjectType(device, 'WebCLDevice') || typeof device === 'number'))) ||\n      (typeof properties==='undefined' || typeof properties === 'number')\n  )) {\n    throw new TypeError('Expected WebCLContext.createCommandQueue(optional WebCLDevice device, optional CLenum properties = 0)');\n  }\n  return this._createCommandQueue(device, properties);\n}\n\ncl.WebCLContext.prototype.createBuffer=function (flags, size, host_ptr) {\n  if (!(arguments.length >= 2 && typeof flags === 'number' && typeof size === 'number' &&\n      (host_ptr === null || typeof host_ptr === 'undefined' || typeof host_ptr === 'object') )) {\n    throw new TypeError('Expected WebCLContext.createBuffer(CLenum flags, int size, optional ArrayBuffer host_ptr)');\n  }\n  return this._createBuffer(flags, size, host_ptr);\n}\n\ncl.WebCLContext.prototype.createImage=function (flags, descriptor, host_ptr) {\n  if (!(arguments.length >=2 && typeof flags === 'number' &&\n    typeof descriptor === 'object' &&\n    (host_ptr==null || typeof host_ptr==='undefined' || typeof host_ptr === 'object'))) {\n    throw new TypeError('Expected WebCLContext.createImage(CLenum flags, WebCL.WebCLImageDescriptor descriptor, ' +\n      'ArrayBuffer host_ptr)');\n  }\n  return this._createImage(flags, descriptor, host_ptr);\n}\n\ncl.WebCLContext.prototype.createSampler=function (normalized_coords, addressing_mode, filter_mode) {\n  if (!(arguments.length === 3 &&\n      (typeof normalized_coords === 'number' || typeof normalized_coords === 'boolean') &&\n      typeof addressing_mode === 'number' &&\n      typeof filter_mode === 'number')) {\n    throw new TypeError('Expected WebCLContext.createSampler(bool normalized_coords, CLenum addressing_mode, CLenum filter_mode)');\n  }\n  return this._createSampler(normalized_coords, addressing_mode, filter_mode);\n}\n\ncl.WebCLContext.prototype.createUserEvent=function () {\n  if (!(arguments.length === 0)) {\n    throw new TypeError('Expected WebCLContext.createUserEvent()');\n  }\n  return this._createUserEvent();\n}\n\ncl.WebCLContext.prototype.getSupportedImageFormats=function (flags, image_type) {\n  if (!((arguments.length === 2 && typeof flags === 'number' && typeof image_type === 'number') || arguments.length===0 || (arguments.length==1 && typeof flags === 'number'))) {\n    throw new TypeError('Expected WebCLContext.getSupportedImageFormats(CLenum flags, CLenum image_type)');\n  }\n  return this._getSupportedImageFormats(flags, image_type);\n}\n\ncl.WebCLContext.prototype.createFromGLBuffer=function (flags, buffer) {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n   }\n  if (!(arguments.length === 2 && typeof flags === 'number' && typeof buffer ==='object')) {\n    throw new TypeError('Expected WebCLContext.createFromGLBuffer(CLenum flags, WebGLBuffer buffer)');\n  }\n  return this._createFromGLBuffer(flags, buffer ? buffer._ : 0);\n}\n\ncl.WebCLContext.prototype.createFromGLRenderbuffer=function (flags, buffer) {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n   }\n  if (!(arguments.length === 2 && typeof flags === 'number' && typeof buffer ==='object')) {\n    throw new TypeError('Expected WebCLContext.createFromGLRenderbuffer(CLenum flags, WebGLRenderbuffer buffer)');\n  }\n  return this._createFromGLRenderbuffer(flags, buffer ? buffer._ : 0);\n}\n\ncl.WebCLContext.prototype.createFromGLTexture=function (flags, texture_target, miplevel, texture) {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n   }\n  if (!(arguments.length === 4 && typeof flags === 'number' &&\n      typeof texture_target ==='number' &&\n      typeof miplevel ==='number' &&\n      typeof texture ==='object'\n    )) {\n    throw new TypeError('Expected WebCLContext.createFromGLTexture(CLenum flags, GLenum texture_target, GLint miplevel, WebGLTexture2D texture)');\n  }\n  return this._createFromGLTexture(flags, texture_target, miplevel, texture ? texture._ : 0);\n}\n\ncl.WebCLContext.prototype.getGLContextInfo=function () {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n   }\n  return new WebCLRenderingContext(this._getGLContextInfo());\n}\n\ncl.WebCLContext.prototype.getGLContext=function () {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n   }\n  return new WebGLRenderingContext(this._getGLContext());\n}\n\n//////////////////////////////\n//WebCLEvent object\n//////////////////////////////\ncl.WebCLEvent.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLEvent.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLEvent.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLEvent.prototype.getProfilingInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLEvent.getProfilingInfo(CLenum param_name)');\n  }\n  return this._getProfilingInfo(param_name);\n}\n\ncl.WebCLEvent.prototype.setUserEventStatus=function (execution_status) {\n  if (!(arguments.length === 1 && typeof execution_status === 'number')) {\n    throw new TypeError('Expected WebCLEvent.setUserEventStatus(CLenum execution_status)');\n  }\n  return this._setUserEventStatus(execution_status);\n}\n\ncl.WebCLEvent.prototype.setCallback=function (execution_status, fct, args) {\n  if (!(arguments.length >= 2 && typeof execution_status === 'number' &&\n      typeof fct === 'function')) {\n    throw new TypeError('Expected WebCLEvent.setCallback(CLenum execution_status, function callback, any args)');\n  }\n  return this._setCallback(execution_status, fct, args);\n}\n\n//////////////////////////////\n//WebCLUserEvent object\n//////////////////////////////\ncl.WebCLUserEvent.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLUserEvent.prototype.getInfo=function (param_name) {\n  return this._getInfo(param_name);\n}\n\ncl.WebCLUserEvent.prototype.getProfilingInfo=function (param_name) {\n  return this._getProfilingInfo(param_name);\n}\n\ncl.WebCLUserEvent.prototype.setStatus=function (execution_status) {\n  if (!(arguments.length === 1 && typeof execution_status === 'number')) {\n    throw new TypeError('Expected WebCLUserEvent.setStatus(CLenum execution_status)');\n  }\n  return this._setStatus(execution_status);\n}\n\ncl.WebCLUserEvent.prototype.setCallback=function (execution_status, fct, args) {\n if (!(arguments.length >= 2 && typeof execution_status === 'number' &&\n      typeof fct === 'function')) {\n    throw new TypeError('Expected WebCLEvent.setCallback(CLenum execution_status, function callback, any args)');\n  }\n  return this._setCallback(execution_status, fct, args);\n}\n\n//////////////////////////////\n//WebCLKernel object\n//////////////////////////////\ncl.WebCLKernel.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLKernel.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLKernel.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLKernel.prototype.getArgInfo=function (index) {\n  if (!(arguments.length === 1 && typeof index === 'number')) {\n    throw new TypeError('Expected WebCLKernel.getInfo(CLuint number)');\n  }\n  return this._getArgInfo(index);\n}\n\ncl.WebCLKernel.prototype.getWorkGroupInfo=function (device, param_name) {\n  if (!(arguments.length === 2 &&\n    (device==null || (checkObjectType(device, 'WebCLDevice') && typeof param_name === 'number')))) {\n    throw new TypeError('Expected WebCLKernel.getWorkGroupInfo(WebCLDevice device, CLenum param_name)');\n  }\n  return this._getWorkGroupInfo(device, param_name);\n}\n\ncl.WebCLKernel.prototype.setArg=function (index, value) {\n  if (!(arguments.length == 2 && typeof index === 'number' &&\n      (typeof value === 'object') )) {\n    throw new TypeError('Expected WebCLKernel.setArg(int index, WebCLBuffer | WebCLImage | WebCLSampler | ArrayBufferView value)');\n  }\n  return this._setArg(index, value);\n}\n\n//////////////////////////////\n//WebCLMappedRegion object\n//////////////////////////////\n\n//static JS_METHOD(getBuffer);\n\n//////////////////////////////\n//WebCLMemoryObject object\n//////////////////////////////\ncl.WebCLMemoryObject.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLMemoryObject.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLMemoryObject.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLMemoryObject.prototype.getGLObjectInfo=function () {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n  }\n  var info=this._getGLObjectInfo(); // returns a WebGLObjectInfo dictionary\n  if(info && info.glObject)\n    info.glObject=new WebGLBuffer(info.glObject);\n  return info;\n}\n\n//////////////////////////////\n//WebCLBuffer object\n//////////////////////////////\n\ncl.WebCLBuffer.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLBuffer.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLBuffer.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLBuffer.prototype.getGLObjectInfo=function () {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n  }\n  var info=this._getGLObjectInfo(); // returns a WebGLObjectInfo dictionary\n  if(info && info.glObject)\n    info.glObject=new WebGLBuffer(info.glObject);\n  return info;\n}\n\ncl.WebCLBuffer.prototype.createSubBuffer=function (flags, origin, sizeInBytes) {\n  if (!(arguments.length === 3 && typeof flags === 'number' && typeof origin === 'number' && typeof sizeInBytes === 'number')) {\n    throw new TypeError('Expected WebCLMemoryObject.createSubBuffer(CLenum flags, CLuint origin, CLuint sizeInBytes)');\n  }\n  return this._createSubBuffer(flags, origin, sizeInBytes);\n}\n\n//////////////////////////////\n//WebCLImage object\n//////////////////////////////\n\ncl.WebCLImage.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLImage.prototype.getInfo=function () {\n  return this._getInfo();\n}\n\ncl.WebCLImage.prototype.getGLObjectInfo=function () {\n  if(!cl.WebCLDevice.prototype.enable_extensions.KHR_gl_sharing.enabled) {\n    throw new WebCLException('WEBCL_EXTENSION_NOT_ENABLED');\n  }\n  var info=this._getGLObjectInfo(); // returns a WebGLObjectInfo dictionary\n  if(info && info.glObject)\n    info.glObject=new WebGLTexture(info.glObject);\n  return info;\n}\n\ncl.WebCLImage.prototype.getGLTextureInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLImage.getGLTextureInfo(CLenum param_name)');\n  }\n  return this._getGLTextureInfo(param_name);\n}\n\n//////////////////////////////\n//WebCLPlatform object\n//////////////////////////////\ncl.WebCLPlatform.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLPlatform.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLPlatform.prototype.extensions=[];\ncl.WebCLPlatform.prototype.enable_extensions={\n  KHR_gl_sharing: {\n    enabled: false,\n    cl_name: null,\n  },\n  KHR_fp16: {\n    enabled: false,\n    cl_name: null,\n  },\n  KHR_fp64: {\n    enabled: false,\n    cl_name: null,\n  },\n  system_info: {\n    enabled: false,\n  },\n  validation_info: {\n    enabled: false,\n  },\n};\n\ncl.WebCLPlatform.prototype.getSupportedExtensions=function () {\n  this.extensions=[];\n  var exts = this._getSupportedExtensions().trim().split(\" \");\n\n  for(var i=0;i<exts.length;i++) {\n    var ext=exts[i].toLowerCase();\n    if(ext.lastIndexOf('_gl_sharing') > -1)\n      this.extensions.push('KHR_gl_sharing');\n    else if(ext.lastIndexOf('khr_fp64') > -1)\n      this.extensions.push('KHR_fp64');\n    else if(ext.lastIndexOf('khr_fp16') > -1)\n      this.extensions.push('KHR_fp16');\n    else if(this.enable_extensions.system_info.enabled) {\n      this.extensions.push(ext);\n    }\n  }\n\n  return this.extensions.sort();\n}\n\ncl.WebCLPlatform.prototype.enableExtension=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'string')) {\n    throw new TypeError('Expected WebCLPlatform.enableExtension(String extension_name)');\n  }\n\n  /* TODO\n   * enable all devices in this platform\n   */\n  return this._enableExtension(param_name);\n}\n\ncl.WebCLPlatform.prototype.getDevices=function (device_type) {\n  if (!(arguments.length == 0 || (arguments.length == 1 && typeof device_type === 'number'))) {\n    throw new TypeError('Expected WebCLPlatform.getDevices(CLenum device_type)');\n  }\n  return this._getDevices(device_type);\n}\n\n//////////////////////////////\n//WebCLProgram object\n//////////////////////////////\ncl.WebCLProgram.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLProgram.prototype.retain=function () {\n  return this._retain();\n}\n\ncl.WebCLProgram.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLProgram.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\ncl.WebCLProgram.prototype.getBuildInfo=function (device, param_name) {\n  if (!(arguments.length === 2 && (typeof device === 'undefined' || checkObjectType(device, 'WebCLDevice')) &&\n    (typeof param_name === 'number' || param_name==null))) {\n    throw new TypeError('Expected WebCLProgram.getBuildInfo(WebCLDevice device, CLenum param_name)');\n  }\n  return this._getBuildInfo(device, param_name);\n}\n\ncl.WebCLProgram.prototype.build=function (devices, options, callback, user_data) {\n  if ( !(arguments.length==0) &&\n    !(arguments.length == 1 && (typeof devices === 'object' || devices==null)) &&\n    !(arguments.length >= 2 && (typeof devices === 'object' || devices==null) &&\n      (options==null || typeof options==='undefined' || typeof options === 'string') &&\n      (callback==null || typeof callback === 'undefined' || typeof callback === 'function')\n  )) {\n    throw new TypeError('Expected WebCLProgram.build(WebCLDevice[] devices, String build_options, optional function callback, optional user_data)');\n  }\n  return this._build(devices, options, callback, user_data);\n}\n\ncl.WebCLProgram.prototype.createKernel=function (name) {\n  if (!(arguments.length === 1 && typeof name === 'string')) {\n    throw new TypeError('Expected WebCLProgram.createKernel(String name)');\n  }\n  return this._createKernel(name);\n}\n\ncl.WebCLProgram.prototype.createKernelsInProgram=function () {\n  return this._createKernelsInProgram();\n}\n\n//////////////////////////////\n//WebCLSampler object\n//////////////////////////////\ncl.WebCLSampler.prototype.release=function () {\n  return this._release();\n}\n\ncl.WebCLSampler.prototype.getInfo=function (param_name) {\n  if (!(arguments.length === 1 && typeof param_name === 'number')) {\n    throw new TypeError('Expected WebCLSampler.getInfo(CLenum param_name)');\n  }\n  return this._getInfo(param_name);\n}\n\n//////////////////////////////\n// extensions\n//////////////////////////////\n","/home/travis/build/npmtest/node-npmtest-node-webcl/node_modules/node-webcl/runner.js":"var fs = require('fs'),\nMocha = require(\"mocha\"),\npath = require('path');\n\n// Our Mocha runner\nvar mocha = new Mocha({\n  ui:\"bdd\",\n  reporter:\"spec\",\n  timeout:5000,\n  slow:1000\n});\n\n// Files which need to be ignored\nvar avoided = [\n\"node_modules\"\n];\n\n// Add the tests to the Mocha instance\n(addFiles = function(dir){\n  fs.readdirSync(dir).filter(function(file){\n   if(!~avoided.indexOf(file)){\n     if(fs.statSync(dir + '/' + file).isDirectory()){\n      addFiles(dir + '/' + file);\n    }\n    return file.substr(-3) === '.js';\n  }\n}).forEach(function(file){\n mocha.addFile(dir + '/' + file);\n});\n})(path.join(process.cwd(), process.argv[2] || \".\"));\n\n// Run the files in Mocha\nmocha.run(function(failures){\n  process.exit(failures);\n});","/home/travis/build/npmtest/node-npmtest-node-webcl/node_modules/node-webcl/lib/clUtils.js":"// Copyright (c) 2011-2012, Motorola Mobility, Inc.\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//  * Redistributions of source code must retain the above copyright\n//    notice, this list of conditions and the following disclaimer.\n//  * Redistributions in binary form must reproduce the above copyright\n//    notice, this list of conditions and the following disclaimer in the\n//    documentation and/or other materials provided with the distribution.\n//  * Neither the name of the Motorola Mobility, Inc. nor the names of its\n//    contributors may be used to endorse or promote products derived from this\n//    software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n// THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nfunction min(a,b) { return a<b ? a : b; }\nfunction max(a,b) { return a>b ? a : b; }\nexports.clamp=function clamp(a,b,c) { return min(max(a,b),c); }\nexports.min=min;\nexports.max=max;\n\nexports.sprintf=function () {\n  // Return a formatted string  \n  // \n  // version: 1109.2015\n  // discuss at: http://phpjs.org/functions/sprintf    // +   original by: Ash Searle (http://hexmen.com/blog/)\n  // + namespaced by: Michael White (http://getsprink.com)\n  // +    tweaked by: Jack\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Paulo Freitas    // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +      input by: Brett Zamir (http://brett-zamir.me)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // *     example 1: sprintf(\"%01.2f\", 123.1);\n  // *     returns 1: 123.10    // *     example 2: sprintf(\"[%10s]\", 'monkey');\n  // *     returns 2: '[    monkey]'\n  // *     example 3: sprintf(\"[%'#10s]\", 'monkey');\n  // *     returns 3: '[####monkey]'\n  var regex = /%%|%(\\d+\\$)?([-+\\'#0 ]*)(\\*\\d+\\$|\\*|\\d+)?(\\.(\\*\\d+\\$|\\*|\\d+))?([scboxXuidfegEG])/g;    \n  var a = arguments,\n  i = 0,\n  format = a[i++];\n\n  // pad()    \n  var pad = function (str, len, chr, leftJustify) {\n    if (!chr) {\n      chr = ' ';\n    }\n    var padding = (str.length >= len) ? '' : Array(1 + len - str.length >>> 0).join(chr);        \n    return leftJustify ? str + padding : padding + str;\n  };\n\n\n  //justify()\n  var justify = function (value, prefix, leftJustify, minWidth, zeroPad, customPadChar) {        \n    var diff = minWidth - value.length;\n    if (diff > 0) {\n      if (leftJustify || !zeroPad) {\n        value = pad(value, minWidth, customPadChar, leftJustify);\n      } else {                \n        value = value.slice(0, prefix.length) + pad('', diff, '0', true) + value.slice(prefix.length);\n      }\n    }\n    return value;\n  };\n\n  //formatBaseX()\n  var formatBaseX = function (value, base, prefix, leftJustify, minWidth, precision, zeroPad) {\n    // Note: casts negative numbers to positive ones\n    var number = value >>> 0;        \n    prefix = prefix && number && {\n      '2': '0b',\n      '8': '0',\n      '16': '0x'\n    }[base] || '';        \n    value = prefix + pad(number.toString(base), precision || 0, '0', false);\n    return justify(value, prefix, leftJustify, minWidth, zeroPad);\n  };\n\n  //formatString()    \n  var formatString = function (value, leftJustify, minWidth, precision, zeroPad, customPadChar) {\n    if (precision != null) {\n      value = value.slice(0, precision);\n    }\n    return justify(value, '', leftJustify, minWidth, zeroPad, customPadChar);    \n  };\n\n  //  doFormat()\n  var doFormat = function (substring, valueIndex, flags, minWidth, _, precision, type) {\n    var number;        \n    var prefix;\n    var method;\n    var textTransform;\n    var value;\n    if (substring == '%%') {\n      return '%';\n    }\n\n    // parse flags        \n    var leftJustify = false,\n    positivePrefix = '',\n    zeroPad = false,\n    prefixBaseX = false,\n    customPadChar = ' ';        \n    var flagsl = flags.length;\n    for (var j = 0; flags && j < flagsl; j++) {\n      switch (flags.charAt(j)) {\n      case ' ':\n        positivePrefix = ' ';                \n        break;\n      case '+':\n        positivePrefix = '+';\n        break;\n      case '-':                \n        leftJustify = true;\n        break;\n      case \"'\":\n        customPadChar = flags.charAt(j + 1);\n        break;            \n      case '0':\n        zeroPad = true;\n        break;\n      case '#':\n        prefixBaseX = true;                \n        break;\n      }\n    }\n\n    // parameters may be null, undefined, empty-string or real valued        \n    // we want to ignore null, undefined and empty-string values\n    if (!minWidth) {\n      minWidth = 0;\n    } else if (minWidth == '*') {\n      minWidth = +a[i++];        \n    } else if (minWidth.charAt(0) == '*') {\n      minWidth = +a[minWidth.slice(1, -1)];\n    } else {\n      minWidth = +minWidth;\n    } \n    // Note: undocumented perl feature:\n    if (minWidth < 0) {\n      minWidth = -minWidth;\n      leftJustify = true;        \n    }\n\n    if (!isFinite(minWidth)) {\n      throw new Error('sprintf: (minimum-)width must be finite');\n    } \n    if (!precision) {\n      precision = 'fFeE'.indexOf(type) > -1 ? 6 : (type == 'd') ? 0 : undefined;\n    } else if (precision == '*') {\n      precision = +a[i++];        \n    } else if (precision.charAt(0) == '*') {\n      precision = +a[precision.slice(1, -1)];\n    } else {\n      precision = +precision;\n    } \n    // grab value using valueIndex if required?\n    value = valueIndex ? a[valueIndex.slice(0, -1)] : a[i++];\n\n    switch (type) {        case 's':\n      return formatString(String(value), leftJustify, minWidth, precision, zeroPad, customPadChar);\n    case 'c':\n      return formatString(String.fromCharCode(+value), leftJustify, minWidth, precision, zeroPad);\n    case 'b':            \n      return formatBaseX(value, 2, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'o':\n      return formatBaseX(value, 8, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'x':\n      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad);        \n    case 'X':\n      return formatBaseX(value, 16, prefixBaseX, leftJustify, minWidth, precision, zeroPad).toUpperCase();\n    case 'u':\n      return formatBaseX(value, 10, prefixBaseX, leftJustify, minWidth, precision, zeroPad);\n    case 'i':        \n    case 'd':\n      number = (+value) | 0;\n      prefix = number < 0 ? '-' : positivePrefix;\n      value = prefix + pad(String(Math.abs(number)), precision, '0', false);\n      return justify(value, prefix, leftJustify, minWidth, zeroPad);        \n    case 'e':\n    case 'E':\n    case 'f':\n    case 'F':\n    case 'g':        \n    case 'G':\n      number = +value;\n      prefix = number < 0 ? '-' : positivePrefix;\n      method = ['toExponential', 'toFixed', 'toPrecision']['efg'.indexOf(type.toLowerCase())];\n      textTransform = ['toString', 'toUpperCase']['eEfFgG'.indexOf(type) % 2];            \n      value = prefix + Math.abs(number)[method](precision);\n      return justify(value, prefix, leftJustify, minWidth, zeroPad)[textTransform]();\n    default:\n      return substring;\n    }    \n  };\n\n  return format.replace(regex, doFormat);\n}\n\n//Helper function to init data arrays \n//*********************************************************************\nexports.fillArray=function (array, max)\n{\n  if(max==undefined) max=100;\n  for (var i = 0, l=array.length; i < l; ++i) \n    array[i] = Math.floor(Math.random()*max);\n}\n\n//Helper function to print data arrays \n//*********************************************************************\nexports.printArray=function (array)\n{\n  for (var i = 0, l=array.length; i < l; ++i) \n    console.log(sprintf(\"%d: %d\", i, array[i]));\n}\n\n//Round Up Division function\nexports.roundUp=function (group_size, global_size) \n{\n    return (global_size % group_size == 0) ? global_size : (global_size + group_size - r);\n}\n\n//Helper to get next up value for integer division\nexports.DivUp= function (dividend, divisor)\n{\n  return (dividend % divisor == 0) ? Math.round(dividend / divisor) : Math.round(dividend / divisor) + 1;\n}\n\n"}